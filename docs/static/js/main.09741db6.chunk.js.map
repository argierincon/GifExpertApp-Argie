{"version":3,"sources":["components/AddCategory/AddCategory.jsx","helpers/getGifs.jsx","components/GifGridItem/GifGridItem.jsx","components/GifGrid/GifGrid.jsx","hooks/useFetchGifs.js","components/GifExpertApp/GifExpertApp.jsx","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","gif","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","useFetchGifs","key","GifExpertApp","categories","App","document","querySelector","ReactDOM","render"],"mappings":"0TA+BeA,G,MA1BY,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACZC,mBAAS,IADG,mBACzCC,EADyC,KAC7BC,EAD6B,KAehD,OACE,0BAAMC,SATa,SAACC,GACpBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC7BR,GAAc,SAACS,GAAD,OAAWP,GAAX,mBAA0BO,OACxCN,EAAc,OAMd,2BAAOO,KAAK,OAAOC,MAAOT,EAAYU,SAdhB,SAACP,GACzBF,EAAcE,EAAEQ,OAAOF,a,uBCTdG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACfC,EADe,iDACiCC,UACpDH,GAFmB,+DAIFI,MAAMF,GAJJ,cAIfG,EAJe,gBAKEA,EAAKC,OALP,uBAKbC,EALa,EAKbA,KAEFC,EAAOD,EAAKE,KAAI,SAACC,GAAS,IAAD,EAC7B,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAXjB,kBAcdM,GAdc,4CAAH,sDCaLO,G,MATK,SAAC,GAAoB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAC5B,OACE,yBAAKc,UAAU,+DACb,yBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,2BAAIA,MCkBKO,G,MAhBQ,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECFb,SAACA,GAAc,IAAD,EACdd,mBAAS,CACjCqB,KAAM,GACNa,SAAS,IAH6B,mBACjCC,EADiC,KAC1BC,EAD0B,KAcxC,OATAC,qBAAU,WACRxB,EAAQC,GACLwB,MAAK,SAAAhB,GACJc,EAAS,CACPf,KAAMC,EACNY,SAAS,SAGd,CAACpB,IACGqB,EDXyBI,CAAazB,GAA/BQ,EADyB,EAC/BD,KAAYa,EADmB,EACnBA,QAEpB,OACE,oCACE,wBAAIJ,UAAU,QAAQhB,GACrBoB,GAAW,aACZ,yBAAKJ,UAAU,gBACZR,EAAKC,KAAI,SAACC,GAAD,OACR,kBAAC,EAAD,iBAAiBA,EAAjB,CAAsBgB,IAAKhB,EAAIC,aEI1BgB,G,MAjBM,WAAO,IAAD,EACWzC,mBAAS,CAAC,SADrB,mBAClB0C,EADkB,KACN3C,EADM,KAGzB,OACE,iCACE,4CACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,6BACA,6BACG2C,EAAWnB,KAAI,SAACT,GAAD,OACd,kBAAC,EAAD,CAASA,SAAUA,EAAU0B,IAAK1B,WCTtC6B,G,MAAMC,SAASC,cAAc,SAEnCC,IAASC,OAAQ,kBAAE,EAAF,MAAqBJ,K","file":"static/js/main.09741db6.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport './AddCategory.css'\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n\r\n  const handleInputChange = (e) => {\r\n    setInputValue(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (inputValue.trim().length > 2) {\r\n      setCategories((cats) => [inputValue, ...cats]);\r\n      setInputValue(\"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input type=\"text\" value={inputValue} onChange={handleInputChange} />\r\n    </form>\r\n  );\r\n};\r\n\r\nAddCategory.propTypes = {\r\n  setCategories: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default AddCategory;\r\n","export const getGifs = async (category) => {\r\n  const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(\r\n    category\r\n  )}&limit=10&api_key=CgPiOlDWJgWEGDo70vyz4ACQAac30Raj`;\r\n  const resp = await fetch(url);\r\n  const { data } = await resp.json();\r\n\r\n  const gifs = data.map((gif) => {\r\n    return {\r\n      id: gif.id,\r\n      title: gif.title,\r\n      url: gif.images?.downsized_medium.url,\r\n    };\r\n  });\r\n  return gifs;\r\n};\r\n","import React from \"react\";\r\n\r\nimport './GifGridItem.css'\r\n\r\nconst GifGridItem = ({ title, url }) => {\r\n  return (\r\n    <div className=\"gif-box animate__animated animate__bounce animate__delay-2s\">\r\n      <img src={url} alt={title} />\r\n      <p>{title}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GifGridItem;\r\n","import React from \"react\";\r\n\r\nimport { useFetchGifs } from \"../../hooks/useFetchGifs\";\r\nimport GifGridItem from \"../GifGridItem/GifGridItem\";\r\n\r\nimport './GifGrid.css'\r\n\r\n\r\n// CUSTOM HOOKS: SECCIÃ“N 6. VIDEO 78, 79.\r\n\r\nexport const GifGrid = ({ category }) => {\r\n  const { data: gifs, loading } = useFetchGifs(category);\r\n\r\n  return (\r\n    <>\r\n      <h3 className=\"cats\">{category}</h3>\r\n      {loading && \"Loading...\"}\r\n      <div className=\"gif-category\">\r\n        {gifs.map((gif) => (\r\n          <GifGridItem {...gif} key={gif.id} />\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GifGrid;\r\n","import {\r\n  useEffect,\r\n  useState\r\n} from \"react\";\r\nimport {\r\n  getGifs\r\n} from '../helpers/getGifs'\r\n\r\nexport const useFetchGifs = (category) => {\r\n  const [state, setState] = useState({\r\n    data: [],\r\n    loading: true,\r\n  });\r\n  useEffect(() => {\r\n    getGifs(category)\r\n      .then(gifs => {\r\n        setState({\r\n          data: gifs,\r\n          loading: false\r\n        });\r\n      })\r\n  }, [category])\r\n  return state;\r\n};","import React, { useState } from \"react\";\r\nimport AddCategory from \"../AddCategory/AddCategory\";\r\nimport GifGrid from \"../GifGrid/GifGrid\";\r\n\r\nimport \"./GifExpertApp.css\";\r\n\r\nconst GifExpertApp = () => {\r\n  const [categories, setCategories] = useState([\"Anne\"]);\r\n\r\n  return (\r\n    <section>\r\n      <h2>GifExpertApp</h2>\r\n      <AddCategory setCategories={setCategories} />\r\n      <hr />\r\n      <div>\r\n        {categories.map((category) => (\r\n          <GifGrid category={category} key={category} />\r\n        ))}\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default GifExpertApp;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom'\r\n\r\nimport GifExpertApp from './components/GifExpertApp/GifExpertApp';\r\n\r\nimport './index.css';\r\n\r\nconst App = document.querySelector('#app');\r\n\r\nReactDOM.render( < GifExpertApp / > , App)"],"sourceRoot":""}